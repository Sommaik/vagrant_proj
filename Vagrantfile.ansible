# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    config.vm.box = "ubuntu/xenial64"

    config.ssh.insert_key = false
    config.ssh.private_key_path = ["~/.ssh/id_rsa", "~/.vagrant.d/insecure_private_key"]
    config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
    config.vm.provision "file", source: "~/.ssh/id_rsa", destination: "~/.ssh/id_rsa"
    config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/id_rsa.pub"
    config.vm.provision "shell", inline: <<-EOC
      sudo sed -i -e "\\#PasswordAuthentication yes# s#PasswordAuthentication yes#PasswordAuthentication no#g" /etc/ssh/sshd_config
      sudo service ssh restart
    EOC

    $agent_script = <<-SCRIPT
      sudo apt-get update
      sudo apt-get install python -y
    SCRIPT

    $ansible_script = <<-SCRIPT
      sudo apt-get update
      sudo apt-get install software-properties-common -y
      sudo apt-add-repository ppa:ansible/ansible
      sudo apt-get update
      sudo apt-get install python ansible -y
    SCRIPT

    $jenkins_script = <<-SCRIPT
      wget -q -O - https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -
      sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
      sudo apt-get update
      sudo apt-get install default-jre -y
      sudo apt-get install jenkins -y
    SCRIPT

    $docker_script = <<-SCRIPT
      sudo apt-get install apt-transport-https ca-certificates curl software-properties-common -y
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo apt-key fingerprint 0EBFCD88
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      sudo apt-get update
      sudo apt-get install docker-ce -y
      sudo groupadd docker
      sudo usermod -aG docker vagrant
      sudo systemctl enable docker
      sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose --silent
      sudo chmod +x /usr/local/bin/docker-compose
    SCRIPT

#    config.vm.define "master1" do |master|
#        master.vm.host_name = "master1"
#        master.vm.network :private_network, ip: "192.168.33.10"
#        master.vm.provision "shell", inline: $ansible_script
#        master.vm.provision "shell", inline: $docker_script
#    end

    config.vm.define "master1" do |master|
      master.vm.box = "master"
      master.vm.network :private_network, ip: "192.168.33.10"
      master.vm.provider "virtualbox" do |v|
        v.memory = 512
        v.cpus = 1
      end
    end

    config.vm.define "agent1" do |agent|
        agent.vm.host_name = "agent1"
        agent.vm.network :private_network, ip: "192.168.33.11"
        agent.vm.provision "shell", inline: $agent_script
        agent.vm.provision "shell", inline: $docker_script
    end

    config.vm.define "agent2" do |agent|
        agent.vm.host_name = "agent2"
        agent.vm.network :private_network, ip: "192.168.33.12"
        agent.vm.provision "shell", inline: $agent_script
        agent.vm.provision "shell", inline: $docker_script
    end

    config.vm.define "jenkins" do |agent|
        agent.vm.host_name = "jenkins"
        agent.vm.network :private_network, ip: "192.168.33.13"
        agent.vm.provision "shell", inline: $jenkins_script
        agent.vm.provision "shell", inline: $docker_script
    end

    config.vm.define "node1" do |agent|
        agent.vm.host_name = "node1"
        agent.vm.network :private_network, ip: "192.168.33.14"
        agent.vm.provision "shell", inline: "sudo apt-get install default-jre -y"
    end

end